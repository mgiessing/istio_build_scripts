From 8907e81de384a7857d74e1f437eb6c1a0338daf0 Mon Sep 17 00:00:00 2001
From: root <root@p1295-met1.p1295.cecc.ihost.com>
Date: Wed, 13 Jan 2021 12:34:09 -0500
Subject: [PATCH] Patched for ppc64le

---
 Makefile                        |  2 +-
 WORKSPACE                       |  4 ++++
 extensions/stats/plugin_test.cc | 46 +++++++++++++++++++++++++++--------------
 3 files changed, 36 insertions(+), 16 deletions(-)

diff --git a/Makefile b/Makefile
index 620ccaa..96713b9 100644
--- a/Makefile
+++ b/Makefile
@@ -39,7 +39,7 @@ endif
 
 UNAME := $(shell uname)
 ifeq ($(UNAME),Linux)
-BAZEL_CONFIG_DEV  = --config=libc++
+BAZEL_CONFIG_DEV  =
 BAZEL_CONFIG_REL  = --config=libc++ --config=release
 BAZEL_CONFIG_ASAN = --config=clang-asan --config=libc++
 BAZEL_CONFIG_TSAN = --config=clang-tsan --config=libc++
diff --git a/WORKSPACE b/WORKSPACE
index c2f2bb4..8286981 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -48,6 +48,10 @@ http_archive(
     sha256 = ENVOY_SHA256,
     strip_prefix = "envoy-" + ENVOY_SHA,
     url = "https://github.com/istio/envoy/archive/" + ENVOY_SHA + ".tar.gz",
+    patches = [
+       "//patches:wee8_genrule_cmd.patch",
+       "//patches:istio_envoy_lua_1.3.1.patch",
+    ],
 )
 
 # TODO(silentdai) Use bazel args to select envoy between local or http
diff --git a/extensions/stats/plugin_test.cc b/extensions/stats/plugin_test.cc
index 9cc6d18..2fcc14b 100644
--- a/extensions/stats/plugin_test.cc
+++ b/extensions/stats/plugin_test.cc
@@ -41,21 +41,37 @@ namespace Stats {
 
 TEST(IstioDimensions, Hash) {
   IstioDimensions d1;
-  IstioDimensions d2{.request_protocol = "grpc"};
-  IstioDimensions d3{.request_protocol = "grpc", .response_code = "200"};
-  IstioDimensions d4{.request_protocol = "grpc", .response_code = "400"};
-  IstioDimensions d5{.request_protocol = "grpc", .source_app = "app_source"};
-  IstioDimensions d6{.request_protocol = "grpc",
-                     .source_app = "app_source",
-                     .source_version = "v2"};
-  IstioDimensions d7{.outbound = true,
-                     .request_protocol = "grpc",
-                     .source_app = "app_source",
-                     .source_version = "v2"};
-  IstioDimensions d8{.outbound = true,
-                     .request_protocol = "grpc",
-                     .source_app = "app_source",
-                     .source_version = "v2"};
+  IstioDimensions d2;
+  d2.request_protocol = "grpc";
+
+  IstioDimensions d3;
+  d3.request_protocol = "grpc";
+  d3.response_code = "200";
+
+  IstioDimensions d4;
+  d4.request_protocol = "grpc";
+  d4.response_code = "400";
+
+  IstioDimensions d5;
+  d5.request_protocol = "grpc";
+  d5.source_app = "app_source";
+
+  IstioDimensions d6;
+  d6.request_protocol = "grpc";
+  d6.source_app = "app_source";
+  d6.source_version = "v2";
+
+  IstioDimensions d7;
+  d7.outbound = true;
+  d7.request_protocol = "grpc";
+  d7.source_app = "app_source";
+  d7.source_version = "v2";
+
+  IstioDimensions d8;
+  d8.outbound = true;
+  d8.request_protocol = "grpc";
+  d8.source_app = "app_source";
+  d8.source_version = "v2";
   // Must be unique except for d7 and d8.
   std::set<size_t> hashes;
   hashes.insert(IstioDimensions::HashIstioDimensions()(d1));
-- 
1.8.3.1

